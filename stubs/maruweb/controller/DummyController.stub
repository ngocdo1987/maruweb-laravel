<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Http\Requests\Dummy\StoreDummyRequest;
use App\Http\Requests\Dummy\UpdateDummyRequest;

use App\Services\DummyService;
use App\Models\Dummy;

// Export
use App\Exports\DummiesExport;
use Maatwebsite\Excel\Facades\Excel;

// Import
use App\Imports\DummiesImport;

class DummyController extends Controller
{
    protected $service;

    public function __construct(DummyService $service)
    {
        $this->service = $service;
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(Request $request)
    {
        $dummies = $this->service->searchAdvanced($request, 1);

        return view('admin.dummies.index', compact('dummies'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('admin.dummies.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(StoreDummyRequest $request)
    {
        try {
            $id = $this->service->storeDummy($request);
        } catch (\Exception $e) {
            print_r($e->getMessage());
            die('');
            return redirect()->back()->withErrors(['message' => $e->getMessage()])->withInput();
        }

        $url = route('admin.dummies.edit', $id).'?page='.request()->page;
        return redirect($url)->with('success', __('Save successfully'));
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $dummy = Dummy::findOrFail($id);

        return view('admin.dummies.show', compact('dummy'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $dummy = Dummy::findOrFail($id);

        return view('admin.dummies.edit', compact('dummy'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(UpdateDummyRequest $request, $id)
    {
        try {
            $this->service->updateDummy($request);
        } catch (\Exception $e) {
            print_r($e->getMessage());
            die('');
            return redirect()->back()->withErrors(['message' => $e->getMessage()])->withInput();
        }

        $url = route('admin.dummies.edit', $id).'?page='.request()->page;
        return redirect($url)->with('success', __('Save successfully'));
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        try {
            $this->service->destroyDummy($request);
        } catch (\Exception $e) {
            print_r($e->getMessage());
            die('');
            return redirect()->back()->withErrors(['message' => $e->getMessage()])->withInput();
        }

        $url = route('admin.dummies.index').'?page='.request()->page;
        return redirect($url)->with('success', __('Deleted successfully'));
    }

    public function exportCsv(Request $request)
    {
        return Excel::download(new DummiesExport($request, $this->service), 'dummies_'.date('Y_m_d_H_i_s').'.csv');
    }
}
